version: '3.7'

services:
  webserver:
    image: apache/airflow:2.10.0
    container_name: airflow_webserver
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - api_key=${api_key}  # Variables de entorno desde .env
      - pwd_redshift=${pwd_redshift}
    env_file:
      - ./.env  # Montar el archivo .env
    depends_on:
      - postgres
      - airflow-init
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
    command: >
      bash -c "
      airflow db upgrade &&
      airflow users create --username airflow --password airflow --firstname Airflow --lastname Admin --role Admin --email airflow@example.com &&
      airflow webserver"
    restart: always

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5
    restart: always

  scheduler:
    image: apache/airflow:2.10.0
    container_name: airflow_scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - api_key=${api_key}  # Variables de entorno desde .env
      - pwd_redshift=${pwd_redshift}
      - email_user=${email_user}
      - email_code=${email_code}
      - email_to=${email_to}
    env_file:
      - ./.env  # Montar el archivo .env
    depends_on:
      - postgres
      - airflow-init
    command: "airflow scheduler"
    restart: always

  airflow-init:
    image: apache/airflow:2.10.0
    container_name: airflow_init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    env_file:
      - ./.env  # Montar el archivo .env
    command: "airflow db init"
    depends_on:
      - postgres
    restart: "no"

volumes:
  postgres-db-volume: